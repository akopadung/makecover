{"version":3,"sources":["logo.svg","rerender.jsx","render.jsx","timeline.jsx","App.js","serviceWorker.js","index.js","profile2.jpg"],"names":["module","exports","Rerennder","state","data","logo","im1","im2","im3","im4","im5","topic1","topic2","name","title","dept","school","sso","this","props","id","console","log","map","obj","Timestamp","replace","pic1","pic2","pic3","pic4","pic5","v4","v5","className","src","alt","style","display","Component","Render","selectedOption","options","handleChange","setState","value","optionx","index","label","email","key","onChange","Timeline","Tabletop","init","callback","googleData","simpleSheet","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2d7d5958.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Tabletop from \"tabletop\";\nimport profile from \"./profile2.jpg\";\n\nimport Select, { components } from \"react-select\";\n\nvar selectedOption = \"\";\n\nvar data = [];\nexport default class Rerennder extends Component {\n  state = {\n    data: []\n  };\n\n  render() {\n    const {data} = this.props.data;\n    const id = this.props.id;\n    console.log(\"9 \" +id);\n    var logo;\n    var im1;\n    var im2;\n    var im3;\n    var im4;\n    var im5;\n    var topic1;\n    var topic2;\n    var name;\n    var title;\n    var dept;\n    var school;\n    var sso;\n    \n      data.map((obj) => {\n        if (obj.Timestamp == id) {\n          logo = obj.logo.replace(\"open?\", \"uc?export=view&\");\n        im1 = obj.pic1.replace(\"open?\", \"uc?export=view&\");\n        im2 = obj.pic2.replace(\"open?\", \"uc?export=view&\");\n        im3 = obj.pic3.replace(\"open?\", \"uc?export=view&\");\n        im4 = obj.pic4.replace(\"open?\", \"uc?export=view&\");\n        im5 = obj.pic5.replace(\"open?\", \"uc?export=view&\");\n        topic1 = obj.topic1;\n        topic2 = obj.topic2;\n        name = obj.name;\n        title = obj.title;\n        dept = obj.dept;\n        school = obj.school;\n        sso = obj.sso;\n        }\n      });\n    \n    var v4 = \"inline-block\";\n    var v5 = \"inline-block\";\n    if (im4 === null || im4 === \"\") {\n      im4 = im1;\n      v4 = \"none\";\n      im5 = im1;\n      v5 = \"none\";\n    }\n    if (im5 === null || im5 === \"\") {\n      im5 = im1;\n      v5 = \"none\";\n      im4 = im1;\n      v4 = \"none\";\n    }\n    return (\n      <div>\n        <div className=\"page\">\n          <img src={logo} className=\"App_logo\" alt=\"logo\" style={{}} />\n          <p className=\"App_header\">{topic1}</p>\n          <p className=\"app_head2\">{topic2}</p>\n          <img className=\"App_profile\" alt=\"\" src={im1} />\n          <img className=\"app_story1\" alt=\"\" src={im2} />\n          <img className=\"app_story1_1\" alt=\"\" src={im3} />\n          <img\n            className=\"app_story2\"\n            alt=\"\"\n            src={im4}\n            style={{ display: v4 }}\n          />\n          <img\n            className=\"app_story2_2\"\n            alt=\"\"\n            src={im5}\n            style={{ display: v5 }}\n          />\n          <p className=\"app_a1\">{name}</p>\n          <p className=\"app_a2\">{title}</p>\n          <p className=\"app_a3\">{dept}</p>\n          <p className=\"app_a4\">{school}</p>\n          <p className=\"app_a5\">{sso}</p>\n          <p className=\"app_a6\">สำนักงานคณะกรรมการการศึกษาขึ้นพื้นฐาน</p>\n          <p className=\"app_a7\">กระทรวงศึกษาธิการ</p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Tabletop from \"tabletop\";\nimport profile from \"./profile2.jpg\";\n\nimport Select, { components } from \"react-select\";\nimport Rerender from './rerender'\n\nvar selectedOption = \"\";\n\nvar options = [];\nexport default class Render extends Component {\n  state = {\n    selectedOption: null,\n    options: []\n  };\n  handleChange = (selectedOption) => {\n    this.setState({ selectedOption }, () =>\n      console.log(`Option selected:`, this.state.selectedOption.value),\n      \n    );\n  };\n\n  render() {\n    const { data } = this.props.data;\n    const optionx = data.map((obj, index) => {\n      return {\n        label: obj.email,\n        value: obj,\n        id: obj.Timestamp,\n        key: index,\n      };\n    });\n    var logo;\n    var im1;\n    var im2;\n    var im3;\n    var im4;\n    var im5;\n    var topic1;\n    var topic2;\n    var name;\n    var title;\n    var dept;\n    var school;\n    var sso;\n    if (!selectedOption) {\n      data.map((obj) => {\n        options = obj;\n          logo = obj.logo.replace(\"open?\", \"uc?export=view&\");\n        im1 = obj.pic1.replace(\"open?\", \"uc?export=view&\");\n        im2 = obj.pic2.replace(\"open?\", \"uc?export=view&\");\n        im3 = obj.pic3.replace(\"open?\", \"uc?export=view&\");\n        im4 = obj.pic4.replace(\"open?\", \"uc?export=view&\");\n        im5 = obj.pic5.replace(\"open?\", \"uc?export=view&\");\n        topic1 = obj.topic1;\n        topic2 = obj.topic2;\n        name = obj.name;\n        title = obj.title;\n        dept = obj.dept;\n        school = obj.school;\n        sso = obj.sso;\n      });\n    } else {\n        console.log(\"options \" + this.state.selectedOption);\n        options = this.state;\n        logo = this.state.selectedOption.value.logo.replace(\"open?\", \"uc?export=view&\");\n        im1 = this.state.selectedOption.value.pic1.replace(\"open?\", \"uc?export=view&\");\n        im2 = this.state.selectedOption.value.pic2.replace(\"open?\", \"uc?export=view&\");\n        im3 = this.state.selectedOption.value.pic3.replace(\"open?\", \"uc?export=view&\");\n        im4 = this.state.selectedOption.value.pic4.replace(\"open?\", \"uc?export=view&\");\n        im5 = this.state.selectedOption.value.pic5.replace(\"open?\", \"uc?export=view&\");\n        topic1 = this.state.selectedOption.value.topic1;\n        topic2 = this.state.selectedOption.value.topic2;\n        name = this.state.selectedOption.value.name;\n        title = this.state.selectedOption.value.title;\n        dept = this.state.selectedOption.value.dept;\n        school = this.state.selectedOption.value.school;\n        sso = this.state.selectedOption.value.sso;\n    }\n    var v4 = \"inline-block\";\n    var v5 = \"inline-block\";\n    if (im4 === null || im4 === \"\") {\n      im4 = im1;\n      v4 = \"none\";\n      im5 = im1;\n      v5 = \"none\";\n    }\n    if (im5 === null || im5 === \"\") {\n      im5 = im1;\n      v5 = \"none\";\n      im4 = im1;\n      v4 = \"none\";\n    }\n    return (\n        <div>\n            {\n        this.state &&\n      this.state.selectedOption && this.state.selectedOption.value!=null &&(\n      <div>\n        <Rerender data={this.props.data} email = {this.state.selectedOption.label} id = {this.state.selectedOption.id}></Rerender>\n        \n      </div>\n      \n      )\n      }\n      <Select\n          value={selectedOption}\n          onChange={this.handleChange}\n          options={optionx}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Tabletop from \"tabletop\";\nimport logo from \"./logo.svg\";\nimport profile from \"./profile2.jpg\";\nimport Render from \"./render\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport Select, { components } from 'react-select';\n\nvar data = [];\nvar id = \"\";\n\nexport default class Timeline extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    Tabletop.init({\n      key: \"1t8RteVim3QRx_U2vlbwXkMNSL7RRq1oY0xeicxE4wws\",\n      callback: (googleData) => {\n        console.log(\"google sheet data --->\", googleData);\n        this.setState({\n          data: googleData,\n        });\n      },\n      simpleSheet: true,\n    });\n  }\n  render() {\n    return (\n      this.state &&\n      this.state.data && (\n        \n          <Render data={this.state}></Render>\n        \n      )\n    );\n  }\n\n}\n","import React from 'react';\nimport './App.css';\nimport Timeline from './timeline'\n\nfunction App() {\n\n  return (\n\n      <Timeline></Timeline>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/profile2.da4c82e1.jpg\";"],"sourceRoot":""}