{"version":3,"sources":["logo.svg","profile2.jpg","timeline.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Timeline","handleSort","id","value","event","setState","year","state","data","Tabletop","init","key","callback","googleData","console","log","simpleSheet","this","prev","mail","forEach","obj","className","src","logo","alt","style","profile","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"mGAAAA,EAAOC,QAAU,IAA0B,kC,2NCA3CD,EAAOC,QAAU,IAA0B,sC,sLCOtBC,E,kDACnB,aAAe,IAAD,8BACZ,gBAMFC,WAAa,SAACC,EAAIC,GAAL,OAAe,SAACC,GAC3B,EAAKC,SAAS,CAAEC,KAAMH,EAAOD,GAAIA,MANjC,EAAKK,MAAQ,CACXC,KAAM,IAHI,E,gEAWO,IAAD,OAClBC,IAASC,KAAK,CACZC,IAAK,+CACLC,SAAU,SAACC,GACTC,QAAQC,IAAI,4BAA0BF,GACtC,EAAKR,SAAS,CACZG,KAAMK,KAGVG,aAAa,M,+BAIP,IACAR,EAASS,KAAKV,MAAdC,KAEJU,EAAO,GACPC,EAAO,sBAQX,OAPAX,EAAKY,SAAQ,SAACC,GACRH,GAAQC,IACVD,EAAOC,MAGXL,QAAQC,IAAIG,GACZJ,QAAQC,IAAIP,GAEV,yBAAKc,UAAU,QACb,yBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,OAAOC,MAAO,KACvD,uBAAGJ,UAAU,cAAb,okBAGA,uBAAGA,UAAU,aAAb,8UAGA,yBAAKC,IAAKI,IAASL,UAAU,gBAC7B,yBAAKC,IAAKI,IAASL,UAAU,eAC7B,yBAAKC,IAAKI,IAASL,UAAU,iBAC7B,yBAAKC,IAAKI,IAASL,UAAU,eAC7B,yBAAKC,IAAKI,IAASL,UAAU,iBAC7B,uBAAGA,UAAU,UAAb,2GAGA,uBAAGA,UAAU,UAAb,gIAGA,uBAAGA,UAAU,UAAb,sQAGA,uBAAGA,UAAU,UAAb,sQAGA,uBAAGA,UAAU,UAAb,sQAGA,uBAAGA,UAAU,UAAb,sQAGA,uBAAGA,UAAU,UAAb,2Q,GArE8BM,aCKvBC,MARf,WAEE,OAEI,kBAAC,EAAD,OCIcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjC,QAAQiC,MAAMA,EAAMC,a","file":"static/js/main.ba190718.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile2.da4c82e1.jpg\";","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Tabletop from \"tabletop\";\nimport logo from \"./logo.svg\";\nimport profile from \"./profile2.jpg\"\nvar data = [];\nvar id = \"\";\nexport default class Timeline extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n    };\n  }\n\n  handleSort = (id, value) => (event) => {\n    this.setState({ year: value, id: id });\n  };\n\n  componentDidMount() {\n    Tabletop.init({\n      key: \"1F9eNlHl3QJIsnhzjCZhYkYUXeiLCpvmjzVkTgr4Uvm8\",\n      callback: (googleData) => {\n        console.log(\"google sheet data --->\", googleData);\n        this.setState({\n          data: googleData,\n        });\n      },\n      simpleSheet: true,\n    });\n  }\n\n  render() {\n    const { data } = this.state;\n    var options = [];\n    var prev = \"\";\n    var mail = \"akopadung@gmail.com\";\n    data.forEach((obj) => {\n      if (prev == mail) {\n        prev = mail;\n      }\n    });\n    console.log(prev);\n    console.log(data);\n    return (\n      <div className=\"page\">\n        <img src={logo} className=\"App_logo\" alt=\"logo\" style={{}} />\n        <p className=\"App_header\">\n          รายงานปฏิบัติการรายงานปฏิบัติการรายงานปฏิบัติการรายงานปฏิบัติการรายงานปฏิบัติการรายงานปฏิบัติการ\n        </p>\n        <p className=\"app_head2\">\n          รายงานปฏิบัติการรายงานปฏิบัติการรายงานปฏิบัติการรายงานป\n        </p>\n        <img src={profile} className=\"App_profile\" />\n        <img src={profile} className=\"app_story1\" />\n        <img src={profile} className=\"app_story1_1\" />\n        <img src={profile} className=\"app_story2\" />\n        <img src={profile} className=\"app_story2_2\" />\n        <p className=\"app_a1\">\n          นายอนุรักษ์ โคผดุง\n        </p>\n        <p className=\"app_a2\">\n          ตำแหน่ง ครู วิทยะฐานนะ -\n        </p>\n        <p className=\"app_a3\">\n          กลุ่มสาระการเรียนรู้วิทยาศาสตร์และเทคโนโลยี\n        </p>\n        <p className=\"app_a4\">\n          กลุ่มสาระการเรียนรู้วิทยาศาสตร์และเทคโนโลยี\n        </p>\n        <p className=\"app_a5\">\n          กลุ่มสาระการเรียนรู้วิทยาศาสตร์และเทคโนโลยี\n        </p>\n        <p className=\"app_a6\">\n          กลุ่มสาระการเรียนรู้วิทยาศาสตร์และเทคโนโลยี\n        </p>\n        <p className=\"app_a7\">\n          กลุ่มสาระการเรียนรู้วิทยาศาสตร์และเทคโนโลยี\n        </p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport Timeline from './timeline'\n\nfunction App() {\n\n  return (\n\n      <Timeline></Timeline>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}